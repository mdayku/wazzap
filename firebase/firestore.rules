rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{uid} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == uid;
    }
    
    // Threads collection
    match /threads/{threadId} {
      // Allow reading if user is a member
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Allow creating if user is in the members array being created
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.members;
      
      // Allow updating if user is a member
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.members;
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.members &&
          request.resource.data.senderId == request.auth.uid;
        allow update: if request.auth != null; // Allow Cloud Functions to update
      }
      
      // Members subcollection
      match /members/{uid} {
        allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.members;
      }
      
      // Summaries subcollection
      match /summaries/{sid} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.members;
        allow write: if request.auth != null; // Allow Cloud Functions to write
      }
      
      // Decisions subcollection
      match /decisions/{did} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.members;
        allow write: if request.auth != null; // Allow Cloud Functions to write
      }
    }
    
    // Embeddings collection (for semantic search)
    match /embeddings/{embeddingId} {
      allow read: if request.auth != null;
      allow write: if false; // Only Cloud Functions can write
    }
  }
}

